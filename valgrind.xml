<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/vizka/CLionProjects/ACSProject/cmake-build-debug/k</line>
</preamble>

<pid>19649</pid>
<ppid>15713</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--tool=memcheck</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/tmp/valgrind</arg>
    <arg>--gen-suppressions=all</arg>
    <arg>--leak-check=full</arg>
    <arg>--leak-resolution=med</arg>
    <arg>--track-origins=yes</arg>
    <arg>--vgdb=no</arg>
  </vargv>
  <argv>
    <exe>/home/vizka/CLionProjects/ACSProject/cmake-build-debug/k</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.075 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:00.768 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>80 bytes in 1 blocks are definitely lost in loss record 1 of 1</text>
    <leakedbytes>80</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3089F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x10891B</ip>
      <obj>/home/vizka/CLionProjects/ACSProject/cmake-build-debug/k</obj>
      <fn>main</fn>
      <dir>/home/vizka/CLionProjects/ACSProject</dir>
      <file>main.cpp</file>
      <line>5</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: definite</skaux>
    <sframe> <fun>_Znam</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:_Znam
   fun:main
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: definite</skaux>
    <sframe> <fun>_Znam</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:_Znam
   fun:main
}
]]>
    </rawtext>
  </suppression>
<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

